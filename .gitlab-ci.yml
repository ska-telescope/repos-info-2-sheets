image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3

variables:
  MINIKUBE: "false"
  VALUES: "pipeline.yaml"

stages:
  - clean
  - test
  - post_test
  - debug
  - publish
  - release
  - clean_staging
  - deploy_staging
  - update_versions

.uninstall_template: &uninstall_definition
  tags:
  - k8srunner
  script:
  - &uninstall_scripts |
    echo "Uninstall_template being executed"
    echo "DELETE == \"true" #(so someone means business)
  only:
    refs:
      - master
      - tags
    variables:
      - $DELETE == "true"

.uninstall_template_after_script: &uninstall_definition_after_script
  after_script:
  - *uninstall_scripts

uninstall mid:
  stage: clean
  <<: *uninstall_definition
  environment:
    name: "test"
  after_script:
    - echo "Just uninstalled MID"

uninstall low:
  stage: clean
  <<: *uninstall_definition
  environment:
    name: "test-low"
  after_script:
    - echo "Just uninstalled LOW"

.test_template: &test_definition
  tags:
  - k8srunner
  script:
  - echo "Test Template Definition"
  # artifacts:
  #   name: "$CI_PROJECT_NAME-$CI_JOB_ID"
  #   paths:
  #     - "build/"
  #   reports:
  #     junit: build/report.xml
    # when: always

test mid:
  stage: test
  <<: *test_definition
  only:
    refs:
      - master
  after_script:
    - echo "Just tested MID"

test mid on demand:
  stage: test
  variables:
  before_script:
    - echo "About to test MID on demand"
  <<: *test_definition
  <<: *uninstall_definition_after_script
  when: manual
  only:
    refs:
      - branches

test low:
  stage: test
  <<: *test_definition
  environment:
  only:
    refs:
      - master

test low on demand:
  stage: test
  <<: *test_definition
  <<: *uninstall_definition_after_script
  when: manual
  only:
    refs:
      - branches

.sdp_config_dump_template: &sdp_config_dump_definition
  tags:
  - docker-executor
  script:
  - echo "SDP CONFIG DUMP TEMPLATE"
  when: manual

sdp_config_dump_mid:
  stage: debug
  only:
    refs:
      - master
  <<: *sdp_config_dump_definition


tag_commit:
  stage: release
  variables: 
    USERNAME: $GITLAB_USER_NAME
    EMAILID: $GITLAB_USER_EMAIL 
    PRIVATE_TOKEN: $STUPID_RELEASE_MANAGER_GITLAB_PRIVATE_TOKEN
  tags:
    - k8srunner
  when:
    always
  when:
    manual
  only:
    refs:
      - master
  script:
    - echo $GITLAB_USER_EMAIL
    - echo $GITLAB_USER_NAME
    - make release-skampi

#
# variables:
#   CHARTS_TO_PUBLISH: tea

clean_staging_low:
  stage: clean_staging
  tags:
    - k8srunner
  only:
    refs:
      - tags
  script:
    - echo "cleaning staging_low"
    #- *uninstall_scripts
  #needs:
  #  - job: tag_commit

clean_staging_mid:
  stage: clean_staging
  tags:
    - k8srunner
  only:
    refs:
      - tags
  script:
    - echo "cleaning staging_mid"
  #- *uninstall_scripts
  #needs:
  #  - job: tag_commit

deploy_staging_low:
  stage: deploy_staging
  tags:
    - k8srunner
  script:
    - echo "Deploying STAGING LOW"
  only:
    refs:
      - tags
  needs:
    - job: clean_staging_low
  
deploy_staging_mid:
  stage: deploy_staging
  tags:
    - k8srunner
  script:
    - echo "Deploying STAGING MID"
  only:
    refs:
      - tags
  needs:
    - job: clean_staging_mid

publish-chart:
  when: on_success
  script:
    - curl -s https://gitlab.com/ska-telescope/stupid/raw/st-622-DO-NOT-MERGE/scripts/publish-charts.sh | bash

version_bump_charts:
  stage: update_versions
  variables:
    USERNAME: "project_14654456_bot"
    EMAILID: $MARVIN_EMAIL
    PRIVATE_TOKEN: $MARVIN_PRIVATE_TOKEN
  tags:
    - k8srunner
  only:
    refs:
      - tags
  script:
    - curl -s https://gitlab.com/ska-telescope/templates-repository/-/raw/st-622-testing/scripts/version_bump_charts.sh | bash
    # - curl -s https://gitlab.com/ska-telescope/templates-repository/-/raw/master/scripts/version_bump_charts.sh | bash
    - make commit-and-push-to-master

include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm_publish.yml'

  # Create Gitlab CI badges from CI metrics
  # https://developer.skatelescope.org/en/latest/tools/continuousintegration.html#automated-collection-of-ci-health-metrics-as-part-of-the-ci-pipeline
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/post_step.yml'
            