#
# Note: Tests can be run locally with
#   gitlab-runner exec <executor, eg. docker> <job name>
#

stages:
  - helm-publish
  - docs

## ============================================================================
## Common settings for building docker images
## ============================================================================

#.push_docker:
#  dependencies: []
#  variables:
#    DOCKER_REGISTRY_HOST: $DOCKER_REGISTRY_HOST
#    DOCKER_REGISTRY_USER: $CI_PROJECT_NAME
#    GIT_VERSION: ${CI_COMMIT_SHA:0:8}
#  tags:
#    - docker
#    - engageska
#  image: docker:stable
#  services:
#    - docker:dind
#  before_script:
#    - apk add make git
#    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
#  script:
#    - cd $BUILD_PATH
#    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME pull_default
#    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME push_version
#  retry: 2


# ============================================================================
# Build documentation
# ============================================================================
#build_docs:
#  stage: test
#  image: nexus.engageska-portugal.pt/sdp-prototype/pytango_ska_dev:latest
#  before_script:
#    - pip install -r docs/requirements.txt
#  script:
#    - make -C docs html
#  artifacts:
#    paths: [docs/build/html/]
#    expire_in: 1 day
#
#create_ci_metrics:
#  stage: .post
#  image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:latest
#  when: always
#  tags: []
#  script:
#    # Gitlab CI badges creation: START
#    - apt-get -y update
#    - apt-get install -y curl --no-install-recommends
#    - curl -s https://gitlab.com/ska-telescope/ci-metrics-utilities/raw/master/scripts/ci-badges-func.sh | sh
#    # Gitlab CI badges creation: END
#  artifacts:
#    paths:
#      - ./build

push-to-devdev:
        when: always
        stage: docs
        only:
        except:
                - master
        tags:
                - helm-repoman
        script:
                # - git remote add devdev https://gitlab.com/ska-telescope/dev.developer.skatelescope.org.git
                - git remote -v

                #- git push devdev HEAD:master

publish-chart:
  stage: helm-publish
  when: manual
  only:
    - helm-publish
  tags:
    - helm-repoman
  script:
    - cd charts
    - if [ $CHART_NAME == 'all' ]; then for d in */; do helm package "$d"; done; else helm package $CHART_NAME; fi
    - for f in *.tgz; do curl -v -u $HELM_USERNAME:$HELM_PASSWORD --upload-file $f $HELM_HOST/repository/helm-chart/$f; rm $f; done
